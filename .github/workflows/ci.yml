name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linter
      run: npm run lint
      
    - name: Run tests
      run: npm run test:coverage
      
    - name: Upload coverage to Codecov
      if: matrix.node-version == '18.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
    - name: Validate extension build
      run: npm run build

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Check for vulnerabilities
      run: npm audit --audit-level high --production

  lint-and-format:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Check code formatting
      run: npm run lint
      
    - name: Validate manifest.json
      run: |
        node -e "
          const manifest = require('./manifest.json');
          if (!manifest.name || !manifest.version || !manifest.manifest_version) {
            throw new Error('Invalid manifest.json');
          }
          console.log('Manifest validation passed');
        "

  build-extension:
    runs-on: ubuntu-latest
    needs: [test, security, lint-and-format]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build extension
      run: npm run build
      
    - name: Create extension package
      run: |
        mkdir -p dist
        cp -r src/ dist/
        cp manifest.json dist/
        cp -r assets/ dist/
        cd dist && zip -r ../extension.zip .
        
     - name: Upload extension artifact
       uses: actions/upload-artifact@v4
       with:
         name: extension-build
         path: extension.zip
         retention-days: 30
  release:
    runs-on: ubuntu-latest
    needs: build-extension
    if: (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master') && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
     - name: Download extension artifact
       uses: actions/download-artifact@v4
       with:
         name: extension-build        
    - name: Get version from manifest
      id: version
      run: |
        VERSION=$(node -p "require('./manifest.json').version")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
     - name: Create Release
       uses: softprops/action-gh-release@v1
       env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         tag_name: v${{ steps.version.outputs.version }}
         name: Release v${{ steps.version.outputs.version }}
         draft: false
         prerelease: false
         files: extension.zip
         body: |
           ## Changes in this Release
           - Automated release from CI/CD pipeline
           - See commit history for detailed changes